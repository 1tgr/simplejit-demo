function u0:0(i32 [%23], i64 fp [%21]) -> i32 [%16], i64 fp [%21] system_v {
    ss0 = incoming_arg 16, offset -16
    sig0 = (i32 [%23]) -> i32 [%16] system_v
    fn0 = colocated u0:0 sig0

                                block0(v0: i32 [%23], v10: i64 [%21]):
[95#50]                             x86_push v10
[20#8089]                           copy_special %20 -> %21
[8#b8]                              v1 = iconst.i32 0
[198#39]                            v2 = icmp eq v0, v1
[341#74]                            brz v2, block2
[-]                                 fallthrough block1

                                block1:
[8#b8]                              v4 = iconst.i32 0
[325#eb]                            jump block3(v4)

                                block2:
[8#b8]                              v5 = iconst.i32 1
[198#39]                            v6 = icmp.i32 eq v0, v5
[341#74]                            brz v6, block5
[-]                                 fallthrough block4

                                block4:
[8#b8]                              v8 = iconst.i32 1
[325#eb]                            jump block6(v8)

                                block5:
[320#e8]                            v9 = call fn0(v0)
[-]                                 fallthrough block6(v9)

                                block6(v7: i32 [%16]):
[-]                                 fallthrough block3(v7)

                                block3(v3: i32 [%16]):
[97#58]                             v11 = x86_pop.i64 
[324#c3]                            return v3, v11
}
function u0:0(i32 [%23], i64 fp [%21], i64 csr [%31]) -> i32 [%16], i64 fp [%21], i64 csr [%31] system_v {
    ss0 = spill_slot 4, offset -28
    ss1 = spill_slot 4, offset -32
    ss2 = incoming_arg 24, offset -24
    sig0 = (i32 [%23]) -> i32 [%16] system_v
    fn0 = colocated u0:1 sig0

                                block0(v9: i32 [%23], v13: i64 [%21], v14: i64 [%31]):
[95#50]                             x86_push v13
[20#8089]                           copy_special %20 -> %21
[95#50]                             x86_push v14
[103#d083]                          adjust_sp_down_imm 8
[73#89]                             v0 = spill v9
[8#b8]                              v1 = iconst.i32 1
[89#8b]                             v8 = fill v0
[166#29]                            v2 = isub v8, v1
[6#89]                              regmove v2, %31 -> %23
[320#e8]                            v10 = call fn0(v2)
[73#89]                             v3 = spill v10
[8#b8]                              v4 = iconst.i32 2
[89#8b]                             v11 = fill v0
[166#29]                            v5 = isub v11, v4
[6#89]                              regmove v5, %31 -> %23
[320#e8]                            v6 = call fn0(v5)
[89#8b]                             v12 = fill v3
[166#01]                            v7 = iadd v12, v6
[6#89]                              regmove v7, %31 -> %16
[103#8083]                          adjust_sp_up_imm 8
[97#58]                             v16 = x86_pop.i64 
[97#58]                             v15 = x86_pop.i64 
[324#c3]                            return v7, v15, v16
}
