function u0:0(i32 [%23], i64 fp [%21]) -> i32 [%16], i64 fp [%21] system_v {
    ss0 = incoming_arg 16, offset -16

                                block0(v0: i32 [%23], v6: i64 [%21]):
[95#50]                             x86_push v6
[20#8089]                           copy_special %20 -> %21
[8#b8]                              v1 = iconst.i32 0
[198#39]                            v2 = icmp ne v0, v1
[341#74]                            brz v2, block2
[-]                                 fallthrough block1

                                block1:
[8#b8]                              v4 = iconst.i32 30
[325#eb]                            jump block3(v4)

                                block2:
[8#b8]                              v5 = iconst.i32 40
[-]                                 fallthrough block3(v5)

                                block3(v3: i32 [%16]):
[97#58]                             v7 = x86_pop.i64 
[324#c3]                            return v3, v7
}
function u0:0(i32 [%23], i32 [%22], i64 fp [%21]) -> i32 [%16], i64 fp [%21] system_v {
    ss0 = incoming_arg 16, offset -16
    sig0 = (i32 [%23]) -> i32 [%16] system_v
    fn0 = colocated u0:0 sig0

                                block0(v0: i32 [%23], v1: i32 [%22], v9: i64 [%21]):
[95#50]                             x86_push v9
[20#8089]                           copy_special %20 -> %21
[8#b8]                              v2 = iconst.i32 0
[198#39]                            v3 = icmp ne v0, v2
[341#74]                            brz v3, block2
[-]                                 fallthrough block1

                                block1:
[6#89]                              regmove.i32 v1, %22 -> %23
[320#e8]                            v5 = call fn0(v1)
[325#eb]                            jump block3(v5)

                                block2:
[8#b8]                              v6 = iconst.i32 50
[-]                                 fallthrough block3(v6)

                                block3(v4: i32 [%16]):
[8#b8]                              v7 = iconst.i32 2
[166#01]                            v8 = iadd v4, v7
[97#58]                             v10 = x86_pop.i64 
[324#c3]                            return v8, v10
}
