function u0:0(i64 fp [%21]) -> i32 [%16], i64 fp [%21] system_v {
    ss0 = incoming_arg 16, offset -16
    gv0 = symbol colocated u1:0
    sig0 = (i64 [%23]) -> i32 [%16] system_v
    fn0 = u0:0 sig0

                                block0(v3: i64 [%21]):
[95#50]                             x86_push v3
[20#8089]                           copy_special %20 -> %21
[313#80b8]                          v0 = symbol_value.i64 gv0
[307#80b8]                          v2 = func_addr.i64 fn0
[6#8089]                            regmove v0, %16 -> %23
[323#20ff]                          v1 = call_indirect sig0, v2(v0)
[97#58]                             v4 = x86_pop.i64 
[324#c3]                            return v1, v4
}
